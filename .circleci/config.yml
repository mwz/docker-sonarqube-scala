version: 2
jobs:
  build:
    docker:
      - image: circleci/openjdk:8-jdk
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build
          command: |
            sudo apt-get update && sudo apt-get install -y jq
            export VERSION=`jq -r '.current.version' vars.json`
            export VERSION_LTS=`jq -r '.lts.version' vars.json`
            docker build -t mwizner/sonarqube-scala-plugins:$VERSION current
            docker build -t mwizner/sonarqube-scala-plugins:$VERSION-full current/full
            docker build -t mwizner/sonarqube-scala-plugins:$VERSION_LTS lts
            docker build -t mwizner/sonarqube-scala-plugins:$VERSION_LTS-full lts/full
  release:
    docker:
      - image: circleci/openjdk:8-jdk
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - "31:63:53:c4:af:b7:2c:a1:62:8e:b0:11:83:f8:62:eb"
      - run:
          name: Set up git
          command: |
            git config --global user.name "CircleCI"
            git config --global user.email "mwz@users.noreply.github.com"
            ssh-keyscan -T 15 github.com >> ~/.ssh/known_hosts
      - setup_remote_docker
      - run:
          name: Release
          command: |
            sudo apt-get update && sudo apt-get install -y jq
            export VERSION=`jq -r '.current.version' vars.json`
            echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin
            ./release.sh
            git tag -a $VERSION -m "Release $VERSION."
            git push --tags
  release-lts:
    docker:
      - image: circleci/openjdk:8-jdk
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - "31:63:53:c4:af:b7:2c:a1:62:8e:b0:11:83:f8:62:eb"
      - run:
          name: Set up git
          command: |
            git config --global user.name "CircleCI"
            git config --global user.email "mwz@users.noreply.github.com"
            ssh-keyscan -T 15 github.com >> ~/.ssh/known_hosts
      - setup_remote_docker
      - run:
          name: Release LTS
          command: |
            sudo apt-get update && sudo apt-get install -y jq
            export VERSION=`jq -r '.lts.version' vars.json`
            echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin
            ./release-lts.sh
            git tag -a $VERSION -m "Release $VERSION."
            git push --tags
  update-dockerhub-readme:
    docker:
      - image: circleci/openjdk:8-jdk
    steps:
      - checkout
      - run:
          name: Update Dockerhub readme
          command: |
            sudo apt-get update && sudo apt-get install -y jq
            LOGIN_BODY="{\"username\": \"${DOCKER_USER}\", \"password\": \"${DOCKER_PASS}\"}"
            TOKEN=$(curl -s \
              -H "Content-Type: application/json" \
              -X POST \
              -d "${LOGIN_BODY}" \
              https://hub.docker.com/v2/users/login | jq -r .token)
            curl -s --show-error --fail \
              --write-out "%{response_code}" \
              --output /dev/null \
              -H "Authorization: JWT ${TOKEN}" \
              -X PATCH --data-urlencode "full_description@README_DOCKERHUB.md" \
              https://cloud.docker.com/v2/repositories/mwizner/sonarqube-scala-plugins/
workflows:
  version: 2
  pr-build:
    jobs:
      - build:
          filters:
            branches:
              ignore: master
  release:
    jobs:
      - hold:
          type: approval
          filters:
            branches:
              only: master
      - release:
          requires:
            - hold
          filters:
            branches:
              only: master
      - update-dockerhub-readme:
          requires:
            - release
          filters:
            branches:
              only: master
      - hold-lts:
          type: approval
          filters:
            branches:
              only: master
      - release-lts:
          requires:
            - hold-lts
          filters:
            branches:
              only: master
      - update-dockerhub-readme:
          requires:
            - release-lts
          filters:
            branches:
              only: master
